/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-04-09T17:34:35.756-04:00[America/New_York]")
@Validated
@Api(value = "hello", description = "the hello API")
public interface HelloApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /hello
     * this is used to get a greeting message from the server
     *
     * @param name  (required)
     * @return you did something wrong (status code 400)
     *         or everything is ok when getting the message (status code 200)
     */
    @ApiOperation(value = "", nickname = "sayHello", notes = "this is used to get a greeting message from the server", response = String.class, tags={ "sample-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "you did something wrong"),
        @ApiResponse(code = 200, message = "everything is ok when getting the message", response = String.class) })
    @GetMapping(
        value = "/hello",
        produces = { "*/*" }
    )
    default ResponseEntity<String> sayHello(@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "name", required = true) String name) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /hello
     *
     * @param body  (required)
     * @return OK (status code 200)
     */
    @ApiOperation(value = "", nickname = "sayHelloPost", notes = "", response = String.class, tags={ "sample-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class) })
    @PostMapping(
        value = "/hello",
        produces = { "*/*" },
        consumes = { "application/json" }
    )
    default ResponseEntity<String> sayHelloPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody String body) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
